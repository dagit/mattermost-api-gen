{
  "/commands": {
    "get": {
      "description": "List commands for a team.\n##### Permissions\n`manage_slash_commands` if need list custom commands.\n",
      "parameters": [
        {
          "description": "The team id.",
          "in": "query",
          "name": "team_id",
          "type": "string"
        },
        {
          "default": "false",
          "description": "To get only the custom commands. If set to false will get the custom\nif the user have access plus the system commands, otherwise just the system commands.\n",
          "in": "query",
          "name": "custom_only",
          "type": "string"
        }
      ],
      "responses": {
        "200": {
          "description": "List Commands retrieve successful",
          "schema": {
            "items": {
              "$ref": "#/definitions/Command"
            },
            "type": "array"
          }
        },
        "400": {
          "$ref": "#/responses/BadRequest"
        },
        "401": {
          "$ref": "#/responses/Unauthorized"
        },
        "403": {
          "$ref": "#/responses/Forbidden"
        },
        "501": {
          "$ref": "#/responses/NotImplemented"
        }
      },
      "summary": "List commands for a team",
      "tags": [
        "commands"
      ]
    },
    "post": {
      "description": "Create a command for a team.\n##### Permissions\n`manage_slash_commands` for the team the command is in.\n",
      "parameters": [
        {
          "description": "command to be created",
          "in": "body",
          "name": "body",
          "required": true,
          "schema": {
            "properties": {
              "creator_id": {
                "description": "User Id who you are creating the command",
                "type": "string"
              },
              "method": {
                "description": "`'P'` for post request, `'G'` for get request",
                "type": "string"
              },
              "team_id": {
                "description": "Team ID to where the command should be created",
                "type": "string"
              },
              "trigger": {
                "description": "Activation word to trigger the command",
                "type": "string"
              },
              "url": {
                "description": "The URL that the command will make the request",
                "type": "string"
              }
            },
            "required": [
              "creator_id",
              "team_id",
              "method",
              "trigger",
              "url"
            ],
            "type": "object"
          }
        }
      ],
      "responses": {
        "201": {
          "description": "Command creation successful",
          "schema": {
            "$ref": "#/definitions/Command"
          }
        },
        "400": {
          "$ref": "#/responses/BadRequest"
        },
        "401": {
          "$ref": "#/responses/Unauthorized"
        },
        "403": {
          "$ref": "#/responses/Forbidden"
        },
        "501": {
          "$ref": "#/responses/NotImplemented"
        }
      },
      "summary": "Create a command",
      "tags": [
        "commands"
      ]
    }
  },
  "/commands/{command_id}": {
    "delete": {
      "description": "Delete a command based on command id string.\n##### Permissions\nMust have `manage_slash_commands` permission for the team the command is in.\n",
      "parameters": [
        {
          "description": "ID of the command to delete",
          "in": "path",
          "name": "command_id",
          "required": true,
          "type": "string"
        }
      ],
      "responses": {
        "200": {
          "description": "Command deletion successful",
          "schema": {
            "$ref": "#/definitions/StatusOK"
          }
        },
        "400": {
          "$ref": "#/responses/BadRequest"
        },
        "401": {
          "$ref": "#/responses/Unauthorized"
        },
        "403": {
          "$ref": "#/responses/Forbidden"
        },
        "404": {
          "$ref": "#/responses/NotFound"
        }
      },
      "summary": "Delete a command",
      "tags": [
        "commands"
      ]
    },
    "put": {
      "description": "Update a single command based on command id string and Command struct.\n##### Permissions\nMust have `manage_slash_commands` permission for the team the command is in.\n",
      "parameters": [
        {
          "description": "ID of the command to update",
          "in": "path",
          "name": "command_id",
          "required": true,
          "type": "string"
        },
        {
          "in": "body",
          "name": "body",
          "required": true,
          "schema": {
            "$ref": "#/definitions/Command"
          }
        }
      ],
      "responses": {
        "200": {
          "description": "Command updated successful",
          "schema": {
            "$ref": "#/definitions/Command"
          }
        },
        "400": {
          "$ref": "#/responses/BadRequest"
        },
        "401": {
          "$ref": "#/responses/Unauthorized"
        },
        "403": {
          "$ref": "#/responses/Forbidden"
        }
      },
      "summary": "Update a command",
      "tags": [
        "commands"
      ]
    }
  },
  "/commands/{command_id}/regen_token": {
    "put": {
      "description": "Generate a new token for the command based on command id string.\n##### Permissions\nMust have `manage_slash_commands` permission for the team the command is in.\n",
      "parameters": [
        {
          "description": "ID of the command to generate the new token",
          "in": "path",
          "name": "command_id",
          "required": true,
          "type": "string"
        }
      ],
      "responses": {
        "200": {
          "description": "Token generation successful",
          "schema": {
            "properties": {
              "token": {
                "description": "The new token",
                "type": "string"
              }
            },
            "type": "object"
          }
        },
        "400": {
          "$ref": "#/responses/BadRequest"
        },
        "401": {
          "$ref": "#/responses/Unauthorized"
        },
        "403": {
          "$ref": "#/responses/Forbidden"
        }
      },
      "summary": "Generate a new token",
      "tags": [
        "commands"
      ]
    }
  },
  "/teams/{team_id}/commands/autocomplete": {
    "get": {
      "description": "List autocomplete commands in the team.\n##### Permissions\n`view_team` for the team.\n",
      "parameters": [
        {
          "description": "Team GUID",
          "in": "path",
          "name": "team_id",
          "required": true,
          "type": "string"
        }
      ],
      "responses": {
        "200": {
          "description": "Autocomplete commands retrieval successful",
          "schema": {
            "items": {
              "$ref": "#/definitions/Command"
            },
            "type": "array"
          }
        },
        "400": {
          "$ref": "#/responses/BadRequest"
        },
        "401": {
          "$ref": "#/responses/Unauthorized"
        },
        "403": {
          "$ref": "#/responses/Forbidden"
        }
      },
      "summary": "List autocomplete commands",
      "tags": [
        "commands"
      ]
    }
  }
}